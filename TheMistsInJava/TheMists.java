// This program is based off Blizzard Entertainment's World of Warcraft: Shadowlands in-game dungeon "Mists of Tirna Scithe" (MOTS) 
//    In MOTS, the player navigates through a 20-room maze. Each room has 2-3 exits and 1 entrance. 
//    In MOTS, one of 5 paths are chosen from a list at the time that a player initially enters the dungeon.
//    In each room there are 4 stone sigils, which hint to the player which room is next in the path.
//    The correct room has at its door the stone sigil that is "odd-one-out"
//    If players guess incorrectly they are teleported to the beginning of the maze.
//    Eventually players arrive to the boss room of the maze, and attack the boss.
//
// This program creates a dungeon object that has 20 room objects in a fixed configuration. It then mimics the goals of MOTS.
// This program reads how the rooms are connected based on directional relationships which are hardcoded in the dungeon class file
// A breadth first search algorithm returns a list of all non-cyclic paths of length <= 7 that lead from starting room to target room. 
// The program then chooses one path from the list at random.
// For each room in the path a truth table (and some logic) generates 4 stone sigil objects in every room in the path
//    which will indicate to the player which rooms are next in the path. 
// In total there are 1 dungeon object, 20 room objets, and 4*(5 to 7) stone objects generated by this program.
// During developement the BFS algorithm generated 22 unique paths.
//
// Core game loop: 
// Player starts in the starting room 
// Player is shown his current room and the directions and names of every room adjacent to his current room
// Player is also shown all 4 (stone sigil) hints of his current room. 1 of the hints is the "odd-on-out"
// Player then chooses a cardinal direction or views his map (although this functionality is just for convenience, and req. full screen)
//    1) player guesses correctly and moves to the next room in path
//    2) player guesses incorrectly and returns to the starting room, 
//        - player then must navigate the path back to his progress in the maze
// Program Ends when the player chooses to quit, or if he reaches the target room

import java.util.Scanner;
import java.util.ArrayList;

public class TheMists {
    private static Scanner input = new Scanner(System.in);
    private static Dungeon TirnaScithe = new Dungeon();
    private static boolean gameOver = false;
    private static final Room START = TirnaScithe.getStartingRoom();

    // Main method houses the core game loop
    public static void main(String[] args) {
        clear();
        Room current = START;
        Room target = TirnaScithe.getTargetRoom();
        ArrayList<Room> path = TirnaScithe.getPath();
        generateHints(path);
        printIntroduction();
        while (gameOver == false) {
            clear();
            System.out.print(current);
            System.out.print(current.getStones());
            Room guess = playerGuess(current);
            current = resolveGuess(path, guess, current);
            if (current == target) {
                gameOver = true;
                printWinBanner();
            }
        }
    }

    // For each room the path. Produce 4 hints in that room.
    // Also set which rooms are "next" or "previous"
    private static void generateHints(ArrayList<Room> path) {
        for (int i = 0; i < path.size() - 1; i++) {
            path.get(i).setNext(path.get(i + 1));
            path.get(i).setStones();
        }
        for (int i = 1; i < path.size(); i++) {
            path.get(i).setPrevious(path.get(i - 1));
        }
    }

    // Player guesses north, south, east, west or view map or quit game
    private static Room playerGuess(Room current) {
        Room guess = current;
        boolean guessComplete = false;
        while (guessComplete == false) {
            System.out.println("\nContinue on the path <[N]orth, [S]outh, [E]ast, [W]est> [M]ap, [Q]uit");
            String direction = input.nextLine().toLowerCase();
            if (direction.equals("n")) {
                guess = current.getNorth();
                guessComplete = true;
            } else if (direction.equals("s")) {
                guess = current.getSouth();
                guessComplete = true;
            } else if (direction.equals("e")) {
                guess = current.getEast();
                guessComplete = true;
            } else if (direction.equals("w")) {
                guess = current.getWest();
                guessComplete = true;
            } else if (direction.equals("m")) {
                printMap();
                pressEnter();
                System.out.print(current.getStones());
            } else if (direction.equals("q")) {
                gameOver = true;
                guessComplete = true;
            }
            if (guess == null) {
                System.out.println("There is no pathway in this direction.");
                guessComplete = false;
            }
        }
        return guess;
    }

    // Decide where the player goes after guessing
    private static Room resolveGuess(ArrayList<Room> path, Room guess, Room current) {
        // If player guesses the next room, and has not already seen the next room
        if (guess == current.getNext() && current.getSolved() == false) {
            printGoodGuess();
            current.setSolved(true);
            return guess;
            // If player returns to a room that he has already seen
        } else if (guess == current.getNext() || guess == current.getPrevious() || guess == current) {
            return guess;
            // If player attempts to deviate from the path
        } else {
            printBadGuess();
            return START;
        }
    }

    // Print to console
    private static void printMap() {
        System.out.println(//

                /*      */"                                                                                                  ###########################                                                            \n"//
                        + "                                                                                                  ##          ...          ##                                                            \n"//
                        + "                                                                                                  ##          .':          ##############                                                \n"//
                        + "                                                                                                  ##        .'                         ##                       #########################\n"//
                        + "                                                                                                  ##    `..'   Sagittarius             ##                       ##                     ##\n"//
                        + "                                                                                                  ##    .'`.               ##          ##                       ##                     ##\n"//
                        + "                                                                                                  ##                       ##          ##                       ##                     ##\n"//
                        + "                                                ###########################                       ##########     ##################    ##           ##############     ########        ##\n"//
                        + "                                                ##                       ##                       ##                       ##    ##    ##           ##  |-________-|         ##        ##\n"//
                        + "                                                ##      .--.             ##                       ##     `-.    .-' Pisces ##    ##    ##           ##  | |      | |         ##        ##\n"//
                        + "                         #########################     (    )       Leo  ##                       ##        :  :         =============================== ||      ||          ##        ##\n"//
                        + "                         ##                           (_)  /             ##                       ##      --:--:--       ===============================  |      |   Scutum  ##        ##\n"//
                        + "                         ##                     ##        (_,            ##                       ##        :  :           ##    ##    ##           ##   \" - __ - \"          ##        ##\n"//
                        + "                         ##                     ##                       ##                       ##     .-'    `-.        ##    ##    ##           ##                       ##        ##\n"//
                        + "                         ##     ###########################     #############################################    ############    ##    ##           #######    ################        ##\n"//
                        + "                         ##     ##                   _                   ##                       ##                       ##    ##    ##           ##  o      o             ##        ##\n"//
                        + "                         ##     ##                  ' `:--.--.           ##   /\\  __  /\\          ##    ._____.            ##    ##    ##           ##   \\     |             ##        ##\n"//
                        + "                         ##     ##                     |  |  |_    Virgo      / \\/..\\/ \\                  | |   Gemini   ===============================  ;.--.;.-0          ##        ##\n"//
                        + "                         ##     ##                     |  |  | )              / / /\\ \\ \\ Phoenix          | |            ===============================  |     \\  Andromeda ##        ##\n"//
                        + "                         ##     ##                     |  |  |/          ##    \\ \\__/ /   (End)   ##     _| |_             ##    ##    ##           ##    |      o           ##        ##\n"//
                        + "                         ##     ##                          (J           ##       \\/              ##    '     '            ##    ##    ##           ## o--o                  ##        ##\n"//
                        + "                         ##     ############################     ##################################################################    ####################    ################        ##\n"//
                        + "                         ##                     ##                       ##                                                ##       *   *                ##    ##            ##        ##\n"//
                        + "              #############    .--.             ##              Aquarius ##                                       ###########        \\ /            #######    ##            ##        ##\n"//
                        + "              ##              /   _`. Cancer           .-\"-._.-\"-._.-    ##                                       ##                  .                        ##            ##        ##\n"//
                        + "              ##             (_) ( )                   .-\"-._.-\"-._.-    ##                                       ##                 / \\   Cygnus              ##            ##        ##\n"//
                        + "              ##     ##     '.    /             ##                       ##                                       ##       ##       *   *           #############            ##        ##\n"//
                        + "              ##     ##       `--'              ##                       ##                                       ##       ##            \\          ##                       ##        ##\n"//
                        + "################     ###########     ######################     ###########                       ##################    #####################    ##############################        ##\n"//
                        + "##       /\\                   ##     ##            .---.    .---.        ##                       ##                       ##    .     .            ##                                 ##\n"//
                        + "##      / v\\                  ##     ##                 \\    \\    \\      ###################      ##        __             ##    '.___.'     Taurus ##                                 ##\n"//
                        + "##     /  | \\  Sextans        ##     ##                  \\     .--.                       ##      ##   ___.'  '.___  Libra       .'   `.                                               ##\n"//
                        + "##    /__-|-_\\            =================               \\   /                           ##      ##   ____________             :       :                                              ##\n"//
                        + "##   (__-_|-__)           =================                . /   Draco   ############     ##      ##                       ##   :       :           #####################################\n"//
                        + "##        o                   ##     ##                    |             ##        ##     ##      ##                       ##    `.___.'            ##                                   \n"//
                        + "################     ###########     ######################     ###########               ###########################     ###################    #####                                   \n"//
                        + "              ##     ####                       ##   _                   ##{            }         ##    \\   |   /          ##         _             ##                                   \n"//
                        + "              ##            .-.   .-.           ##  ' `:--.--.           ## \\____/\\____/          ##     \\  |  /           ## \\      /_)            ##                                   \n"//
                        + "              ##           (_  \\ /  _)    Aries        |  |  |  Scorpius     \\VV/  \\VV/                ---o-o-o---  Orion      \\    /`.  Capricorn  ##                                   \n"//
                        + "              ###########       |                      |  |  |  ..,           \\/ WW \\/ Cassiopeia        /  |  \\                \\  /   ;            ##                                   \n"//
                        + "                       ##       |               ##           `---':      ##   /\"\"\"\"\"\"\\  (Start)   ##    /   |   \\          ##    \\/ __.'            ##                                   \n"//
                        + "                       ##                       ##                       ##  /        \\           ##                       ##                       ##                                   \n"//
                        + "                       ###############################################################################################################################                                   \n");//

    }

    private static void printIntroduction() {

        System.out
                .println("The Mists beckon.\n\nMistcaller: Can you find your way through the Mists? Choose wisely!\n");
        pressEnter();
    }

    private static void printWinBanner() {
        System.out.println("You have breached the mists. You now face the Mistcaller.\n\n");
        System.out.println(//
                /*      */"#    #   #    #####    ###  ####\n"//
                        + " #  # # #      #       ## # ##\n"//
                        + "  #    #    #####    ####  ###\n");
        pressEnter();
    }

    private static void printGoodGuess() {
        System.out.println("\n\n                *Winds blow*\n\n"//
                + "**********************************************\n"//
                + "*    \"Discern the Path. Pierce the Mists.\"   *\n"//
                + "**********************************************\n" //
                + "\n              *The Path opens*\n"//
                + "\nMistcaller: You did it! Good Guess!\n");//

        pressEnter();
    }

    private static void printBadGuess() {
        System.out.println("\n\nMistcaller: Oops! Don't get lost!\n\n"//
                + "\n            *The mists engulf you*\n\n"//
                + "**********************************************\n"//
                + "*   \"Matching sigils, a path to nowhere.     *\n"//
                + "* Only one way, only one sigil of its kind.\" *\n"//
                + "**********************************************\n"//
                + "\n *You find yourself at the start of the maze*\n");//
        pressEnter();
    }

    // Pauses the program, until user presses Enter
    private static void pressEnter() {
        System.out.println("Press <Enter> to continue");
        input.nextLine();
    }

    // Clear the terminal string
    private static void clear() {
        System.out.println("\033[H\033[2J");
    }

}